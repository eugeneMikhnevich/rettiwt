<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
                             http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.training.rettiwt</groupId>
    <artifactId>rettiwt-app</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>

    <name>Rettiwt - Parent</name>
    <description>This is a REST project based on Spring Framework and other different Spring
        subprojects such as Security, Web, REST and so on. At the frontend React is
        used.
    </description>

    <properties>
        <!-- Project module versions -->
        <rettiwt.dao.api.version>1.0</rettiwt.dao.api.version>
        <rettiwt.dao.orm.impl.version>1.0</rettiwt.dao.orm.impl.version>
        <rettiwt.service.version>1.0</rettiwt.service.version>
        <rettiwt.react.app.version>1.0</rettiwt.react.app.version>
        <rettiwt.web.version>1.0</rettiwt.web.version>

        <!-- Plugins -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.version>3.6.0</maven.version>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.compiler.source>1.8</maven.compiler.source>
        <tomcat.plugin.version>2.2</tomcat.plugin.version>
        <resources.plugin.version>3.1.0</resources.plugin.version>
        <clean.plugin.version>3.1.0</clean.plugin.version>
        <processor.plugin.version>3.3.3</processor.plugin.version>

        <!-- Dependencies -->
        <spring.version>5.1.8.RELEASE</spring.version>
        <servlet.version>4.0.1</servlet.version>
        <junit.version>5.5.0</junit.version>
        <lombok.version>1.18.8</lombok.version>
        <jackson.version>2.12.1</jackson.version>
        <logback.version>1.2.3</logback.version>
        <postgres.version>42.2.6</postgres.version>
        <hibernate.version>5.4.3.Final</hibernate.version>
    </properties>

    <modules>
        <module>rettiwt-dao</module>
        <module>rettiwt-service</module>
        <module>rettiwt-react-app</module>
        <module>rettiwt-web</module>
    </modules>

    <dependencyManagement>
        <dependencies>
            <!-- Modules -->
            <dependency>
                <groupId>com.training.rettiwt</groupId>
                <artifactId>rettiwt-dao</artifactId>
                <version>${rettiwt.dao.orm.impl.version}</version>
            </dependency>
            <dependency>
                <groupId>com.training.rettiwt</groupId>
                <artifactId>rettiwt-service</artifactId>
                <version>${rettiwt.service.version}</version>
            </dependency>
            <dependency>
                <groupId>com.training.rettiwt</groupId>
                <artifactId>rettiwt-web</artifactId>
                <version>${rettiwt.web.version}</version>
            </dependency>

            <!-- Spring -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-orm</artifactId>
                <version>${spring.version}</version>
            </dependency>

            <!-- Servlet API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Postgres -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgres.version}</version>
            </dependency>

            <!-- Hibernate -->
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-jpamodelgen</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Spring -->
        <dependency>
            <!-- Doesn't need to exclude jcl dependency and plug in jcl-over-slf4j because it has spring-jcl
                 dependency which already uses SLF4J API -->
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <!-- Unit testing -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- JSON binding -->
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.tomcat.maven</groupId>
                    <artifactId>tomcat7-maven-plugin</artifactId>
                    <version>${tomcat.plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${resources.plugin.version}</version>
                </plugin>
                <plugin>
                    <artifactId>maven-clean-plugin</artifactId>
                    <version>${clean.plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.bsc.maven</groupId>
                    <artifactId>maven-processor-plugin</artifactId>
                    <version>${processor.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.version}</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <showWarnings>true</showWarnings>
                    <showDeprecation>true</showDeprecation>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>